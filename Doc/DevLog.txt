21.09.2020
	Enwicklungsumgebung:
		-Notepad++ (Sprache: Javascript)
	Implementierung des Spiels:
		-Game Klasse
			-Feld
			-Gewinnbedingungen/Spielendbedingungen
			-Clickhandler
			-Zeichen des Feldes auf dem Canvas	
		-Menu
			-Zeichen des Menüs auf dem Canvas
			-Clickhandler
		-Eventhandler
			-Click - weiterleitung an Menu/Game
		-Intervall
			-Game updates
	Implementieren der Ki:
		-Ki(cpu funktion)
			-vervollständigt 2 in einer Reihe
			-verhindert das der Gegner leicht gewinnt
28.09.2020
	Enwicklungsumgebung:
		-Notepad++ (Sprache: Javascript)
	Implementieren des Spiels:
		-Darstelleung:
			-Ersetzen der Prototyp-Markierungen mit Bildern (cross.png, circle.png)
			-Gewinnende Felder werden jetzt immer grün gefärbt
			-Nach Spielende wartet das Programm noch 700ms damit man den Laststate noch sieht
	Implementieren der Ki:
		-Ki(cpu funktion)
			-leiche Strategische Anweisungen werden befolgt
			-wenn keine der Strategischen Anweisungen greift => Zufälliges Feld wird gewählt
			-Funktionen:
				-getFreeTiles
				-getRandomTile
	
	Kommentare eingfügt
05.10.2020
	Enwicklungsumgebung:
		-Notepad++ (Sprache: Javascript)
	Ki:
		-Bug fix (man konnte gewinnen)
	Machen von Bildern für die Präsentation
	
12.10.2020
	Enwicklungsumgebung:
		-Webstorm (by Jetbrains)
	JsDoc:
		-Funktionen und Klassen mit JsDoc versehen (Teilweise wurden Kommentare erstetzt)
	Generelles Rework aller Oberflächen und Menüs
	Strucktur:
		-Umstruckturierung:
			-Hinzufügen von Arcade.js, Game.js, TicTacToe.js, main.js, util.js
			-Entfernen von js.js
		-alle mit Großbuchstaben beginnenden Dateien enthalten nur Klassen und Funktionen, die in den Klassen benötigt werden
		-util beinhaltet Funktionen, die in mehreren anderen Klassen/Funktionen benutzt werden
		-main enthält alle globalen Variablen und erstellt die Arcade
	Arcade:
		-bekommt games (ein Array mit Game Klassen), canvas, context
		-man kann nun mit Pfeilen zwischen den Spielen wechseln
		-es gibt einen Spielen button zum Starten des Spiels
		-play Funktion erstellt ein Spiel und setzt ein Intervall
		-end Funktion wird vom Game objekt zum beenden ausgeführt
	Game:
		-bekommt canvas, context, arcade (das arcade Object, dass das Game gesartet hat)
		-update Funktion wird vom arcade Objekt alle 100ms aufgerufen
		-end Funktion wird vom Game objekt aufgerufen um arcade.end() auszuführen
	util:
		-ClickInRect wird mehrfach in ClickEvent handlern benutzt
	TicTacToe:
		-extends Game
		-zusammenführung von Menu und Game 
		-Anpassungen, damit es in die Arcade implementiert werden kann
		-größten Teils js.js
	main:
		-globale Variablen - game, arcade, ctx, canvas
		-führt einmal arcade.draw() aus

13.10.2020
	Enwicklungsumgebung:
		-Webstorm (by Jetbrains)
	Dynamischer Title
	Screenshots für Präsentation
	Mineseeper.js hinzugefügt
		-nach Vorbild eines Minesweeper Spiels, dass ich früher einmal geschrieben habe
			-logik teilweise übernomme
			-das Minesweeper Spiel, dass als Vorbild fungierte wurde nur von mir und ohne inspiration bzw. Fremdeinwirkung entwickelt
				-ausgenommen die Spielidee - diese ist auf älteren Windowsversionen enthalten
			-verbessert
			-angepasst
		-Kommentare hinzugefügt
		-JsDoc hinzugefügt
		-hinzufügen von Bildern
			-Flagge
			-Bombe
		-Highscores
			-werden im local storage des windows gespeichert
			-für jede Schwierigkeitsstufe einzeln
30.10.2020
	Bug fix:
		-Minesweeper:
			-Nach dem wechseln des Schwierigkeitsmoduses, konnte es zu einer falschen Länge des Field Arrays kommen, was zur falschen Berechnung der Zahlen führte
				-durch das setzen des fields zu einem leeren Array behoben (bei Spielstart) 
09.11.2020
	Enwicklungsumgebung:
		-Notepad++
	-Dice.js
		-man drückt einen Knopf um die Würfel zu stoppen
		-hat man eine höhere Zahl hat man gewonnen
		-eine Animation lässt die Würfel vor dem werfen ihre Zahl ändern
	-util.js
		-generateRandomNumberInRange - generiert einen zufälligen Integer in einem geschlossenem Intervall
10.11.2020
	Enwicklungsumgebung:
		-Webstorm (by Jetbrains)
	Alle Spiele und Arcade
		-man kann mit Enter & Space in Menüs spielen drücken
		-man kann mit Escape & Backspace in Menüs auf zurück klicken
	-dice.js
		-JsDoc
		-Kommentare zur Verständlichkeit